{
  "name": "checkov-prismaless",
  "version": "1.0.120",
  "displayName": "CheckovPrismaless",
  "publisher": "XargsUK",
  "description": "Find and fix misconfigurations in infrastructure-as-code manifests like Terraform, Kubernetes, Cloudformation, Serverless framework, Arm templates using Checkov - static analysis for infrastructure as code.",
  "license": "Apache-2.0",
  "icon": "docs/icon.png",
  "repository": {
    "type": "git",
    "url": "https://github.com/XargsUK/checkov-prismaless-vscode.git"
  },
  "bugs": {
    "url": "https://github.com/XargsUK/checkov-prismaless-vscode/issues"
  },
  "engines": {
    "vscode": "^1.102.0"
  },
  "categories": [
    "Linters",
    "Other"
  ],
  "keywords": [
    "terraform",
    "cloudformation",
    "cloud-security",
    "kubernetes",
    "static analysis"
  ],
  "activationEvents": [
    "*"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "checkov-prismaless.scan-file",
        "title": "Checkov: Run Scan"
      },
      {
        "command": "checkov-prismaless.install-or-update-checkov",
        "title": "Checkov: Install or Update"
      },
      {
        "command": "checkov-prismaless.configuration.open",
        "title": "Checkov: Open Settings"
      },
      {
        "command": "checkov-prismaless.about-checkov",
        "title": "Checkov: About Checkov"
      },
      {
        "command": "checkov-prismaless.open-log",
        "title": "Checkov: Open Log"
      },
      {
        "command": "checkov-prismaless.clear-results-cache",
        "title": "Checkov: Clear results cache"
      },
      {
        "command": "checkov-prismaless.clear-version-cache",
        "title": "Checkov: Clear version cache"
      },
      {
        "command": "checkov-prismaless.refresh-severity-mappings",
        "title": "Checkov: Refresh Severity Mappings"
      }
    ],
    "configuration": {
      "title": "checkov",
      "properties": {
        "checkov-prismaless.checkovVersion": {
          "title": "Checkov version",
          "type": "string",
          "markdownDescription": "The Checkov scanner version to use (e.g., 2.0.123). Enter 'latest' or leave blank to always use the latest version. Be sure to run the 'Install or Update Checkov' command after changing this value. Use the 'About Checkov' command to view the current version.",
          "readOnly": true
        },
        "checkov-prismaless.disableErrorMessage": {
          "title": "Disable error message",
          "markdownDescription": "Stop showing error message popups (use the 'Open Checkov Log' command to view the log).",
          "type": "boolean",
          "default": false
        },
        "checkov-prismaless.clearCacheUponConfigUpdate": {
          "title": "Clear cache upon config update",
          "markdownDescription": "Clear the Checkov extension results cache when the Checkov configuration is updated. This ensures consistant results but will require Checkov to re-scan all files.",
          "type": "boolean",
          "default": true
        },
        "checkov-prismaless.maximumConcurrentScans": {
          "title": "Maximum Concurrent Scans",
          "markdownDescription": "The maximum number of files to scan concurrently. Increasing this value may improve performance but could also increase resource usage. Default: 2",
          "type": "number",
          "default": 2
        },
        "checkov-prismaless.scanTimeout": {
          "title": "Scan Timeout",
          "markdownDescription": "The maximum time (in seconds) to wait for a Checkov scan to complete before automatically cancelling it. Default: 60",
          "type": "number",
          "default": 60
        },
        "checkov-prismaless.useDebugLogs": {
          "title": "Use debug logs",
          "markdownDescription": "Whether to print debug logs from Checkov for troubleshooting",
          "type": "boolean"
        },
        "checkov-prismaless.externalChecksDir": {
          "title": "External Checks Directory",
          "markdownDescription": "Path to external checks to be added",
          "type": "string"
        },
        "checkov-prismaless.skipFrameworks": {
          "title": "Skip Frameworks",
          "markdownDescription": "Filter scan to skip specific frameworks (e.g., 'arm json secrets serverless'). Add multiple frameworks using spaces. See [Checkov Frameworks](https://www.checkov.io/2.Basics/CLI%20Command%20Reference.html) for more information.  \nSetting this configuration property will overide any `skip-framework` entry defined in your [checkov config file](https://github.com/bridgecrewio/checkov?tab=readme-ov-file#configuration-using-a-config-file).",
          "type": "string"
        },
        "checkov-prismaless.frameworks": {
          "title": "Frameworks",
          "markdownDescription": "Filter scan to run only on specific frameworks (e.g., 'arm json secrets serverless'). Add multiple frameworks using spaces.  \nSee [Checkov Frameworks](https://www.checkov.io/2.Basics/CLI%20Command%20Reference.html) for more information.  \nSetting this configuration property will overide any `framework` entry defined in your [checkov config file](https://github.com/bridgecrewio/checkov?tab=readme-ov-file#configuration-using-a-config-file).",
          "type": "string"
        },
        "checkov-prismaless.skipChecks": {
          "title": "Skip Checks",
          "markdownDescription": "Filter scan to run all checks except those listed (deny list). Add multiple checks using comma separated values. Defaults to `BC_LIC*` to skip license compliance checks.  \n\n**Priority:** If your `.checkov.yaml` config file contains `skip-check`, it will take complete precedence over this VS Code setting. Otherwise, this setting will be used. To rely entirely on your config file, clear this field.",
          "type": "string",
          "default": "BC_LIC*"
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "lint:fix": "eslint src --ext ts --fix",
    "test": "node ./out/test/runTest.js"
  },
  "devDependencies": {
    "@types/dockerode": "^3.3.42",
    "@types/lodash": "^4.17.20",
    "@types/mocha": "^10.0.10",
    "@types/node": "^24.0.15",
    "@types/semver": "^7.7.0",
    "@types/vscode": "1.102.0",
    "@typescript-eslint/eslint-plugin": "^8.37.0",
    "@typescript-eslint/parser": "^8.37.0",
    "@vscode/test-electron": "^2.5.2",
    "eslint": "^9.31.0",
    "glob": "^11.0.3",
    "mocha": "^11.7.1",
    "typescript": "^5.8.3",
    "typescript-eslint": "^8.37.0"
  },
  "dependencies": {
    "dockerode": "^4.0.7",
    "lodash": "^4.17.21",
    "semver": "^7.7.2",
    "winston": "^3.17.0"
  }
}
